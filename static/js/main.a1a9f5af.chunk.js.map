{"version":3,"sources":["components/GoodsList/GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","className","map","good","color","name","id","getAll","fetch","then","response","ok","Error","status","statusText","json","SelectionType","App","useState","setGoods","isEmptyGoods","length","handleGoodsSelection","selectionType","a","getAllGoods","getRedGoods","get5FisrtGoods","filter","sort","goodA","goodB","localeCompare","slice","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"+RAQaA,EAAsC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACjD,oBAAIC,UAAU,OAAd,SACGD,EAAME,KAAI,SAAAC,GAAI,OACb,oBAEE,UAAQ,OACRF,UAAS,uBAAkBE,EAAKC,OAHlC,SAKGD,EAAKE,MAJDF,EAAKG,U,YCPX,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,OAAtB,cAAkCH,EAASI,aAGnD,OAAOJ,EAASK,UAIf,ICRFC,G,SAAAA,O,6BAAAA,I,6BAAAA,I,oCAAAA,M,KAME,IAAMC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOlB,EAAP,KAAcmB,EAAd,KACMC,EAAgC,IAAjBpB,EAAMqB,OAErBC,EAAoB,uCAAG,WAAOC,GAAP,SAAAC,EAAA,2DACnBD,EADmB,cAEpBP,EAAcS,YAFM,SAMpBT,EAAcU,YANM,SAUpBV,EAAcW,eAVM,+BAGvBR,EAHuB,SAGRZ,IAHQ,iFAOvBY,EAPuB,UDMtBZ,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAM4B,QAAO,SAAAzB,GAAI,MAAmB,QAAfA,EAAKC,YCPd,mFAWvBe,EAXuB,UDDpBZ,IACNE,MAAK,SAAAT,GAAK,OAAIA,EACZ6B,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMzB,KAAK2B,cAAcD,EAAM1B,SACtD4B,MAAM,EAAG,MCFe,+IAAH,sDAmB1B,OACE,sBAAKhC,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,mCAIA,wBACEA,UAAU,SACViC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMb,EAAqBN,EAAcS,cAJpD,4BASA,wBACExB,UAAU,SACViC,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMb,EAAqBN,EAAcW,iBAJpD,gCASA,wBACE1B,UAAU,SACViC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMb,EAAqBN,EAAcU,cAJpD,6BASEN,GACA,cAAC,EAAD,CAAWpB,MAAOA,QCpE1BoC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a1a9f5af.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from '../../types/Good';\nimport './GoodsList.scss';\n\ninterface GoodsListProps {\n  goods: Good[];\n}\n\nexport const GoodsList: React.FC<GoodsListProps> = ({ goods }) => (\n  <ul className=\"list\">\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        className={`list-item is-${good.color}`}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return ((getAll()\n    .then(goods => goods\n      .sort((goodA, goodB) => goodA.name.localeCompare(goodB.name))\n      .slice(0, 5))));\n};\n\nexport const getRedOnly = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport { GoodsList } from './components/GoodsList';\nimport './App.scss';\nimport './global.css';\n\nimport { getAll, getRedOnly, get5First } from './api/goods';\nimport { Good } from './types/Good';\n\nenum SelectionType {\n  getAllGoods,\n  getRedGoods,\n  get5FisrtGoods,\n}\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const isEmptyGoods = goods.length === 0;\n\n  const handleGoodsSelection = async (selectionType: SelectionType) => {\n    switch (selectionType) {\n      case SelectionType.getAllGoods:\n        setGoods(await getAll());\n        break;\n\n      case SelectionType.getRedGoods:\n        setGoods(await getRedOnly());\n        break;\n\n      case SelectionType.get5FisrtGoods:\n        setGoods(await get5First());\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">\n        Dynamic list of Goods\n      </h1>\n\n      <button\n        className=\"button\"\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => handleGoodsSelection(SelectionType.getAllGoods)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        className=\"button\"\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => handleGoodsSelection(SelectionType.get5FisrtGoods)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        className=\"button\"\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => handleGoodsSelection(SelectionType.getRedGoods)}\n      >\n        Load red goods\n      </button>\n\n      {!isEmptyGoods && (\n        <GoodsList goods={goods} />\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}